# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: 
    npm install -g @angular/cli
  workingDirectory: 'angular/recruitment-application/'
  displayName: 'install angular cli'

- script: 
    npm install
  workingDirectory: 'angular/recruitment-application/'
  displayName: 'npm install'

- script: 
    ng build --prod
  workingDirectory: 'angular/recruitment-application/'
  displayName: 'ng build'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'angular/recruitment-application/dist/recruitment-application/'
    Contents: 'index.html'
    TargetFolder: 'springboot/recruitment-application/src/main/resources/templates'
    

- task: DeleteFiles@1
  inputs:
    SourceFolder: 'angular/recruitment-application/dist/recruitment-application/'
    Contents: 'index.html'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'angular/recruitment-application/dist/recruitment-application/'
    Contents: '**'
    TargetFolder: 'springboot/recruitment-application/src/main/resources/static'

- task: Maven@3
  inputs:
    mavenPomFile: 'springboot/recruitment-application/pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false


- task: AzureWebApp@1
  inputs:
    azureSubscription: 'bjorn-serviceconnection'
    appType: 'webAppLinux'
    appName: 'recruitment-application-iv1201'
    package: 'springboot/recruitment-application/target/recruitment-application-0.0.1.war'
    customDeployFolder: 'ROOT'
    runtimeStack: 'TOMCAT|9.0-jre8'
    startUpCommand: 'catalina.sh run'